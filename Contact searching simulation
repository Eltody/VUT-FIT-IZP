	/*
	 * Author: Tomas Zatko, xzatko02
	 * Date: 9 nov 2019
	 *Program nacita jednotlive kontakty z textoveho suboru (stdin) a so zadanym argumentom 
	 *postupne vyhladava, porovnava a nasledne vypisuje vyhovujuce kontakty
	 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 100  									//vyhladavanie dostupne pre max 100 kontaktov

int main(int argc, char *argv[])
{																	
	char line[102];									//deklaracie premennych 
	char meno_cislo[MAX][100];
	size_t lines = 0;								//premenna pre pocet riadkov v txt subore
	
	while(fgets(line, sizeof(line), stdin) != NULL){				//nacitanie textoveho suboru(stdin) do premennej c riadok po riadku po koniec suboru
		sscanf(line, "%[^\n]s", meno_cislo[lines]);				//uklada konkretny riadok do pola
		if(strlen(meno_cislo[lines]) > 102){	
			fprintf(stderr, "Inappropriate length of the contact");
			return 1;
		}										//SUDE indexy reprezentuju MENA, LICHE indexy reprezentuju CISLA
		++lines;									//inkrementacia celkoveho poctu mien+cisel(meno_cislo)															
	}
	size_t rmv;										//premenna pre odstranenie posledneho znaku z meno_cislo
	for(rmv = 0; rmv <= lines; rmv++){							//cyklus pre odstranenie posledneho znaku z meno_cislo
		meno_cislo[rmv][strlen(meno_cislo[rmv])-1] = '\0';
	}
	
	if (argc > 2){										//osetrenie pri zadani viac ako dvoch argumentov
		fprintf(stderr, "Only one argument required");
		return 1;
	}
	else if (argc == 2){											//kontrola ocakavaneho poctu argumentov pre vypis vyhovujucich cisel
														//konvertuje meno na cislo pre porovnanie vyskytu argumentu
		size_t sudy_riadok; 										//pre inkrementaciu konvertovaneho mena
		size_t pos; 											//pre inkrementaciu konkretnej pozicie pismena konvertovaneho mena
		size_t konv = 0; 										//pre inkrementaciu cisla konvertovaneho mena
		char cislo[MAX][101];										//deklaracia 2D pola pre cisla konvetovanych mien
		for(sudy_riadok = 0; sudy_riadok <= (lines - 2); sudy_riadok = sudy_riadok + 2, konv++){	//inkrementacia mien zo zoznamu pre konvertovanie
			for(pos = 0; pos < 101; pos++){								//inkrementacia konkretnej pozicie pismena v stringu	
					switch(meno_cislo[sudy_riadok][pos]){							
						case 'A':							//priradenie cislu konvertovaneho mena vyhovujuci znak
						case 'B':									
						case 'C':
						case 'a': 							
						case 'b': 
						case 'c': 						
							strcat(cislo[konv], "2");
							break;
						case 'D': 
						case 'E': 
						case 'F': 
						case 'd': 
						case 'e': 
						case 'f': 
							strcat(cislo[konv], "3");   
							break;
						case 'G': 
						case 'H': 
						case 'I':
						case 'g': 
						case 'h': 
						case 'i': 
							strcat(cislo[konv], "4");
							break;
						case 'J': 
						case 'K': 
						case 'L':
						case 'j': 
						case 'k': 
						case 'l':						
							strcat(cislo[konv], "5");
							break;
						case 'M': 
						case 'N': 
						case 'O':
						case 'm': 
						case 'n': 
						case 'o': 
							strcat(cislo[konv], "6");
							break;
						case 'P': 
						case 'Q': 
						case 'R': 
						case 'S':
						case 'p': 
						case 'q': 
						case 'r': 
						case 's':						
							strcat(cislo[konv], "7");
							break;
						case 'T': 		
						case 'U': 
						case 'V':
						case 't': 		
						case 'u': 
						case 'v': 						
							strcat(cislo[konv], "8");
							break;
						case 'W': 
						case 'X': 
						case 'Y': 
						case 'Z':
						case 'w': 
						case 'x': 
						case 'y': 
						case 'z': 						
							strcat(cislo[konv], "9");
							break;
						case ' ': 							//osetrenie medzery
							strcat(cislo[konv], "");			
							break;	
						case '+':							//osetrenie znamienka plus
							strcat(cislo[konv], "0");			
							break;	
					}
			}
		}	
		size_t lichy_riadok;											//premenna pre inkrementaciu lichych kontaktov(cisel) v cykle
		size_t n;												//inkrementacia novych cisel prekonvertovanych z mien
		char *cmp_nbr;												//podmienkova premenna pri hladani substringu v stringu-argumentu v cisle
		char *cmp_name;												//podmienkova premenna pri hladani substringu v stringu-argumentu v cisle konvertovaneho mena
		size_t pocet_vypisov_kontaktov = 0;									//pre scitanie poctu vypisanych kontaktov
		
		for (lichy_riadok = 1, n = 0; lichy_riadok < lines; lichy_riadok = lichy_riadok + 2, n++){		//sude indexy reprezentuju mena, liche indexy reprezentuju cisla
			cmp_nbr = strstr(meno_cislo[lichy_riadok], argv[1]);						//hladanie argumentu v poli cisel
			cmp_name = strstr(cislo[n], argv[1]);								//hladanie argumentu v poli mien konvertovanych na cisla
			
			if ((cmp_nbr != NULL) || (cmp_name != NULL)){
				fprintf(stdout, "%s, %s\n", meno_cislo[lichy_riadok - 1], meno_cislo[lichy_riadok]);//vypis vyhovujuceho cisla pre dane meno v cykle z: meno_cislo
				pocet_vypisov_kontaktov++;								//inkrementacia premennej pre pocet vyhovujucich kontaktov
			}	
		}
		
		if (pocet_vypisov_kontaktov == 0){									//osetrenie pri ziadnom vyhovujucom kontakte
			fprintf(stdout, "Not found\n\n");								//Argumentu nevyhovuje ziaden kontakt.
			return 0;	
		}
		return 0;
	}	
	
	else if (argc == 1){												//osetrenie chyby pri nezadani vstupneho argumentu=vypis vsetkych kontaktov zo zoznamu													
		for(size_t p = 0; p < lines; p = p + 2){								//vypis vsetkych kontaktov v tvare MENO, CISLO
			printf("%s, %s\n", meno_cislo[p], meno_cislo[p + 1]);						//cyklus pre vypis vsetkych mien a cisel z: meno_cislo
		}													//sude indexy reprezentuju mena, liche indexy reprezentuju cisla																	
	}
return 0;
}
